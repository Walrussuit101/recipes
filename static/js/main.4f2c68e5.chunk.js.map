{"version":3,"sources":["components/RecipeCard.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["RecipeCard","Toast","Header","src","this","props","recipe","thumbnail","className","alt","title","Button","variant","href","target","Body","ingredients","React","Component","NavBar","Navbar","bg","expand","Brand","spinner","Toggle","aria-controls","Collapse","id","Form","onSubmit","onSubmitFunc","inline","Control","onChange","onChangeFunc","value","searchTerm","type","placeholder","App","handleSearchTermChange","e","setState","handleNextPage","newPage","state","page","fetchURL","toString","handlePrevPage","handleSearchTermSubmit","preventDefault","getResults","makeFetch","fetch","then","response","json","data","rawResults","forEach","result","results","concat","corsAnywhereURL","prevProps","prevState","snapshot","length","elements","buttons","onClick","Spinner","animation","role","ReactDOM","render","document","getElementById"],"mappings":"gTAyBeA,G,6KAbb,OACC,kBAACC,EAAA,EAAD,KACG,kBAACA,EAAA,EAAMC,OAAP,KACG,yBAAKC,IAAKC,KAAKC,MAAMC,OAAOC,UAAWC,UAAU,eAAeC,IAAI,KACrE,4BAAQD,UAAU,WAAU,2BAAIJ,KAAKC,MAAMC,OAAOI,QAClD,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOJ,UAAU,OAAOK,KAAMT,KAAKC,MAAMC,OAAOO,KAAMC,OAAO,UAA7E,WAEF,kBAACb,EAAA,EAAMc,KAAP,KAAY,2BAAG,4CAAf,IAAwCX,KAAKC,MAAMC,OAAOU,kB,GATvCC,IAAMC,Y,gBCoBhBC,E,uKAlBb,OACC,oCACA,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOT,QAAQ,OAAOU,OAAO,MACrC,kBAACF,EAAA,EAAOG,MAAR,CAAcV,KAAK,KAAnB,gCACDT,KAAKC,MAAMmB,QACV,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAMC,SAAU1B,KAAKC,MAAM0B,aAAcC,QAAM,EAACxB,UAAU,QACvD,kBAACqB,EAAA,EAAKI,QAAN,CAAcC,SAAU9B,KAAKC,MAAM8B,aAAcC,MAAOhC,KAAKC,MAAMgC,WAAYC,KAAK,OAAOC,YAAY,eAAe/B,UAAU,YAChI,kBAACG,EAAA,EAAD,CAAQ2B,KAAK,SAAS1B,QAAQ,QAA9B,yB,GAXUK,IAAMC,W,QCuJZsB,G,wDA9IX,WAAYnC,GAAW,IAAD,8BAClB,cAAMA,IAWVoC,uBAAyB,SAACC,GACtB,EAAKC,SAAS,CAACN,WAAYK,EAAE5B,OAAOsB,SAblB,EAgBzBQ,eAAiB,WAChB,IAAIC,EAAU,EAAKC,MAAMC,KAAO,EAChC,EAAKJ,SAAS,CACbI,KAAMF,EACNG,SAAU,uEAA4E,EAAKF,MAAMT,WAAW,MAAMQ,EAAQI,cApBnG,EAwBzBC,eAAiB,WAChB,IAAIL,EAAU,EAAKC,MAAMC,KAAO,EAChC,EAAKJ,SAAS,CACbI,KAAMF,EACNG,SAAU,uEAA4E,EAAKF,MAAMT,WAAW,MAAMQ,EAAQI,cA5BnG,EAgCtBE,uBAAyB,SAACT,GACtBA,EAAEU,iBAEF,EAAKT,SAAS,CACnBI,KAFa,EAGbC,SAAU,yEAA8E,EAAKF,MAAMT,WAAW,MAHjG,GAG+GY,cArCrG,EAyCtBI,WAAa,YACa,IAAzB,EAAKP,MAAMQ,WACbC,MAAM,EAAKT,MAAME,UACPQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKhB,SAAS,CACViB,WAAYD,EAAI,UAEpB,EAAKb,MAAMc,WAAWC,SAAQ,SAAAC,GAAM,OAChC,EAAKnB,SAAS,CACVoB,QAAS,EAAKjB,MAAMiB,QAAQC,OAAOF,YAjDnD,EAAKhB,MAAO,CACjBQ,WAAW,EACFjB,WAAY,QACrBU,KAAM,EACGC,SAAUiB,kFACVL,WAAY,GACZG,QAAS,IARK,E,+DA0DHG,EAAyBC,EAA4BC,GACjED,EAAUnB,WAAa5C,KAAK0C,MAAME,WAC1C5C,KAAKuC,SAAS,CACboB,QAAS,KAGV3D,KAAKiD,gB,0CAKAjD,KAAKiD,e,+BAML,GAAiC,IAA9BjD,KAAK0C,MAAMiB,QAAQM,OAAa,CAE/B,IAAIC,EAA0B,GAC9BlE,KAAK0C,MAAMiB,QAAQF,SAAQ,SAAAC,GAAM,OAC7BQ,EAAWA,EAASN,OAC/B,kBAAC,EAAD,CAAY1D,OAAQwD,QAMtB,IAAIS,EAAyB,GAkBpB,OAhBRA,EADEnE,KAAK0C,MAAMC,KAAO,EACVwB,EAAQP,OAClB,yBAAKpC,GAAG,aACP,kBAACjB,EAAA,EAAD,CAAQ2B,KAAK,SAAS1B,QAAQ,OAAOJ,UAAU,aAAagE,QAASpE,KAAK8C,gBAA1E,aACA,wBAAI1C,UAAU,mBAAd,SAAwCJ,KAAK0C,MAAMC,MACnD,kBAACpC,EAAA,EAAD,CAAQ2B,KAAK,SAAS1B,QAAQ,OAAO4D,QAASpE,KAAKwC,gBAAnD,eAIS2B,EAAQP,OAClB,yBAAKpC,GAAG,aACP,wBAAIpB,UAAU,mBAAd,SAAuCJ,KAAK0C,MAAMC,MAClD,kBAACpC,EAAA,EAAD,CAAQ2B,KAAK,SAAS1B,QAAQ,OAAOJ,UAAU,aAAagE,QAASpE,KAAKwC,gBAA1E,eAMW,6BACX,kBAAC,EAAD,CACCb,aAAc3B,KAAK+C,uBACnBhB,aAAc/B,KAAKqC,uBACnBJ,WAAYjC,KAAK0C,MAAMT,WACvBb,QACC,uCAGF,yBAAKI,GAAG,wBACP,uBAAGA,GAAG,eAAN,uBAAwC,uBAAGf,KAAK,8BAA8BC,OAAO,UAA7C,qBACvCwD,EACAC,IAOK,OACR,yBAAK/D,UAAU,QACd,kBAAC,EAAD,CACCuB,aAAc3B,KAAK+C,uBACnBhB,aAAc/B,KAAKqC,uBACnBJ,WAAYjC,KAAK0C,MAAMT,WACvBb,QACC,kBAACiD,EAAA,EAAD,CAAS7D,QAAQ,QAAQJ,UAAU,OAAOkE,UAAU,SAASC,KAAK,UAC/D,0BAAMnE,UAAU,WAAhB,sB,GArIQS,IAAMC,Y,YCZxB0D,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.4f2c68e5.chunk.js","sourcesContent":["import React from 'react';\nimport {recipeData} from '../interfaces/recipeData';\nimport {Toast, Button} from 'react-bootstrap';\n\nimport './RecipeCard.css';\n\ninterface recipeCardProps{\n\trecipe: recipeData \n}\n\nclass RecipeCard extends React.Component<recipeCardProps, {}>{\t\n\trender(){\t\n\t\treturn(\n\t\t\t<Toast>\n  \t\t\t\t<Toast.Header>\n   \t \t\t\t\t<img src={this.props.recipe.thumbnail} className=\"rounded mr-2\" alt=\"\" />\n    \t\t\t\t<strong className=\"mr-auto\"><b>{this.props.recipe.title}</b></strong>\n    \t\t\t\t<Button variant=\"info\" className=\"ml-2\" href={this.props.recipe.href} target=\"_blank\">Recipe</Button>\n  \t\t\t\t</Toast.Header>\n  \t\t\t\t<Toast.Body><b><u>Ingredients:</u></b> {this.props.recipe.ingredients}</Toast.Body>\n\t\t\t</Toast>\t\n\t\t)\n\t}\n}\n\nexport default RecipeCard;\n","import React from 'react';\nimport {Navbar, Form, Button} from 'react-bootstrap';\n\ninterface NavBarProps{\n\tonSubmitFunc: (e: React.FormEvent<HTMLFormElement>) => void,\n\tonChangeFunc: (e: React.ChangeEvent<HTMLInputElement>) => void,\n\tsearchTerm: string,\n\tspinner: JSX.Element\n}\n\nclass NavBar extends React.Component<NavBarProps, {}>{\t\n\trender(){\n\t\treturn(\n\t\t\t<>\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n  \t\t\t\t<Navbar.Brand href=\"/\">Recipe Searcher &#127860;</Navbar.Brand>\n\t\t\t\t{this.props.spinner}\n  \t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  \t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n    \t\t\t\t<Form onSubmit={this.props.onSubmitFunc} inline className=\"ml-2\">\n      \t\t\t\t\t<Form.Control onChange={this.props.onChangeFunc} value={this.props.searchTerm} type=\"text\" placeholder=\"Food name...\" className=\"mr-sm-2\" />\t\n      \t\t\t\t\t<Button type=\"submit\" variant=\"info\">Find Recipes!</Button>\n    \t\t\t\t</Form>\n  \t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default NavBar;\n","import React from 'react';\nimport {recipeData} from './interfaces/recipeData';\nimport RecipeCard from './components/RecipeCard';\nimport NavBar from './components/NavBar';\nimport {Spinner, Button} from 'react-bootstrap';\nimport './App.css';\n\ninterface state{\n\tmakeFetch: boolean,\n    searchTerm: string,\n\tpage: number,\n    fetchURL: string,\n    rawResults: Object[],\n    results: recipeData[]\n}\n\nconst corsAnywhereURL = \"https://cors-anywhere.herokuapp.com/\";\n\nclass App extends React.Component<{}, state> {\n    constructor(props: {}){\n        super(props);\n        this.state= {\n\t\t\tmakeFetch: true,\n            searchTerm: \"bread\",\n\t\t\tpage: 1,\n            fetchURL: corsAnywhereURL+\"http://www.recipepuppy.com/api/?q=bread&p=1\",\n            rawResults: [],\n            results: []\n        }\n    }\n\n    handleSearchTermChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.setState({searchTerm: e.target.value})\n    }\n\n\thandleNextPage = ():void => {\t\t\t\n\t\tlet newPage = this.state.page + 1;\t\n\t\tthis.setState({\n\t\t\tpage: newPage,\t\n\t\t\tfetchURL: \"https:cors-anywhere.herokuapp.com/\" + \"http://www.recipepuppy.com/api/?q=\"+this.state.searchTerm+\"&p=\"+newPage.toString()\n\t\t})\n\t}\n\n\thandlePrevPage = (): void => {\n\t\tlet newPage = this.state.page - 1;\n\t\tthis.setState({\n\t\t\tpage: newPage,\n\t\t\tfetchURL: \"https:cors-anywhere.herokuapp.com/\" + \"http://www.recipepuppy.com/api/?q=\"+this.state.searchTerm+\"&p=\"+newPage.toString()\n\t\t})\n\t}\n\n    handleSearchTermSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n\t\tlet newPage = 1;\n        this.setState({\n\t\t\tpage: newPage,\n\t\t\tfetchURL: \"https://cors-anywhere.herokuapp.com/\" + \"http://www.recipepuppy.com/api/?q=\"+this.state.searchTerm+\"&p=\"+newPage.toString()\n        })\n    }\n\n    getResults = (): void => {\n\t\tif(this.state.makeFetch === true){\n\t\t\tfetch(this.state.fetchURL)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    rawResults: data['results']\n                })\n                this.state.rawResults.forEach(result =>\n                    this.setState({\n                        results: this.state.results.concat(result as recipeData)\n                    })\n                )\n            })\n\t\t}\n\t}\n\n    componentDidUpdate(prevProps: Readonly<{}>, prevState: Readonly<state>, snapshot?: any) {\n        if(prevState.fetchURL !== this.state.fetchURL){\t\n\t\t\tthis.setState({\t\n\t\t\t\tresults: []\n\t\t\t});\n\t\t\t \n\t\t\tthis.getResults();\n        }\n    }\n\n    componentDidMount() {\n        this.getResults();\n    }\n\n    render(){\n\n\t\t//if there are results in state, render them\n        if(this.state.results.length !== 0){\n\n            let elements: JSX.Element[] = [];\n            this.state.results.forEach(result =>\n                elements = elements.concat(\t\n\t\t\t\t\t<RecipeCard recipe={result}></RecipeCard>\n                )\n            )\n\n\t\t\t//if greater than page 1, display next/prev\n\t\t\t//if page 1, only display next\n\t\t\tlet buttons: JSX.Element[] = [];\n\t\t\tif(this.state.page > 1){\n\t\t\t\tbuttons = buttons.concat(\n\t\t\t\t<div id=\"buttonDiv\">\n\t\t\t\t\t<Button type=\"button\" variant=\"info\" className=\"float-left\" onClick={this.handlePrevPage}>Prev Page</Button>\n\t\t\t\t\t<h5 className=\"float-left mx-4\" >Page: {this.state.page}</h5>\n\t\t\t\t\t<Button type=\"button\" variant=\"info\" onClick={this.handleNextPage}>Next Page</Button>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}else{\n\t\t\t\tbuttons = buttons.concat(\n\t\t\t\t<div id=\"buttonDiv\">\n\t\t\t\t\t<h5 className=\"float-left mr-4\">Page: {this.state.page}</h5>\n\t\t\t\t\t<Button type=\"button\" variant=\"info\" className=\"float-left\" onClick={this.handleNextPage}>Next Page</Button>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\n            return(\n                <div>\n\t\t\t\t\t<NavBar\n\t\t\t\t\t\tonSubmitFunc={this.handleSearchTermSubmit} \n\t\t\t\t\t\tonChangeFunc={this.handleSearchTermChange} \n\t\t\t\t\t\tsearchTerm={this.state.searchTerm}\n\t\t\t\t\t\tspinner = {\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<div id=\"recipeElementWrapper\">\n\t\t\t\t\t\t<p id=\"resultsPara\">Results provided by <a href=\"http://www.recipepuppy.com/\" target=\"_blank\">Recipe Puppy API</a></p>\n\t\t\t\t\t\t{elements}\n\t\t\t\t\t\t{buttons}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            )\n\n\t\t//if there are not results, that means we're getting them, render navbar with loading spinner\n        }else{\n            return(\n\t\t\t\t<div className=\"mb-5\">\n\t\t\t\t\t<NavBar\n\t\t\t\t\t\tonSubmitFunc={this.handleSearchTermSubmit} \n\t\t\t\t\t\tonChangeFunc={this.handleSearchTermChange} \n\t\t\t\t\t\tsearchTerm={this.state.searchTerm}\n\t\t\t\t\t\tspinner = {\n\t\t\t\t\t\t\t<Spinner variant=\"light\" className=\"ml-3\" animation=\"border\" role=\"status\">\n  \t\t\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t</Spinner>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n            )\n        }\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}